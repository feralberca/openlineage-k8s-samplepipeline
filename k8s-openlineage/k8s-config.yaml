apiVersion: apps/v1
kind: Deployment
metadata:
  name: marquez-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: marquez-api
  template:
    metadata:
      labels:
        app: marquez-api
    spec:
      containers:
        - name: marquez-api
          image: marquezproject/marquez:latest
          ports:
            - containerPort: 5000
            - containerPort: 5001
          volumeMounts:
            - name: config-dir
              mountPath: /config 
          env:
            - name: MARQUEZ_CONFIG
              value: /config/marquez.yaml
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: marquez.db.conf
                  key: username
            - name: DB_PWD
              valueFrom:
                secretKeyRef:
                  name: marquez.db.conf
                  key: password    
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: marquez.db.conf
                  key: host
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: marquez.db.conf
                  key: database                
      initContainers:
        - name: get-template
          image: busybox
          volumeMounts:
            - name: config-dir
              mountPath: /config           
          command:
            - wget
            - "-O"
            - "/config/marquez.yaml"
            - "https://raw.githubusercontent.com/feralberca/openlineage-k8s-samplepipeline/develop/k8s-openlineage/marquez-template.yaml"
      volumes:
      - name: config-dir
        emptyDir: {}                                                                
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: marquez-api-hc-config
spec:
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 10
    healthyThreshold: 1
    unhealthyThreshold: 2
    type: HTTP
    requestPath: /healthcheck
    port: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: marquez-api-svc
  annotations:
      cloud.google.com/backend-config: '{"ports": {"80":"marquez-api-hc-config", "81":"marquez-api-hc-config"}}'
spec:
  ports:
    - port: 80
      targetPort: 5000
      protocol: TCP
      name: http1
    - port: 81
      targetPort: 5001
      protocol: TCP
      name: http2
  selector:
    app: marquez-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: marquez-web
spec:
  replicas: 3
  selector:
    matchLabels:
      app: marquez-web 
  template:
    metadata:
      labels:
        app: marquez-web 
    spec:
      containers:
        - name: marquez-web 
          image: marquezproject/marquez-web:latest
          ports:
            - containerPort: 3000
          env:
            - name: MARQUEZ_HOST
              value: "marquez-api-svc"
            - name: MARQUEZ_PORT
              value: "80"
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: marquez-web-hc-config
spec:
  healthCheck:
    checkIntervalSec: 10
    timeoutSec: 10
    healthyThreshold: 1
    unhealthyThreshold: 2
    type: HTTP
    requestPath: /
    port: 3000
---    
apiVersion: v1
kind: Service
metadata:
  name: marquez-web-svc
  annotations:
      cloud.google.com/backend-config: '{"ports": {"80":"marquez-web-hc-config"}}'  
spec:
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: marquez-web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: marquez-ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
  - http:
      paths:
      - path: /api/*
        pathType: ImplementationSpecific
        backend:
          service:
            name: marquez-api-svc
            port:
              number: 80
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: marquez-web-svc
            port:
              number: 80